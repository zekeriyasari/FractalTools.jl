var documenterSearchIndex = {"docs":
[{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"This page includes notes about one dimensional fractal interpolation and one dimensional hidden fractal interpolation.","category":"page"},{"location":"manual/one_dimensional_interpolation/#Preliminaries","page":"1D Fractal Interpolation","title":"Preliminaries","text":"","category":"section"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Let N  2 be natural number. Let x_0  x_1  ldots  x_N be real numbers. Let I = x_0 x_N, and I_i = x_i x_i + 1 for i = 0 ldots N - 1 be the subintervals of I. Consider homeomorphisms L_i(x) I mapsto I_i such that","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginaligned\nL_i(x_j) - L_i(x_k)  leq s_i x_j - x_k \nL_i(x_0) = x_i quad L_i(x_N) = x_i + 1  \nendaligned","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"for all x_j x_k in I  0 leq s_i  1. Consider N continuous transformations F_i  I times mathbbR mapsto mathbbR such that ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginaligned\nF_i(x_j y_j) - F_i(x_j y_k) leq r_i y_j - y_k \nF_i(x_0 y_0) = y_i quad F_i(x_N y_N) = y_i + 1 \nendaligned","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"for x_j in I  y_j y_k in mathbbR  0 leq r_i  1. Let w_i  I times mathbbR mapsto I_i times mathbbR such that","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"w_i(x y) = (L_i(x) F_i(x y))  i = 1 ldots N","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Then following is the main theorem of fractal interpolation functions put forward by Barnsley.","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"The followings hold for the IFS mathcalI =  I times mathbbR w_i  i = 1 ldots N :","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"It has a unique attractor G which is the graph of a continuous function fImapsto mathbbR satisfying f(x_i) = y_i for i = 0 ldots N.\nLet (mathcalF d) be a complete metric space such that mathcalF =  tildef in mathcalC^1 (I) tildef(x_0) = y_0  tildef(x_N) = y_N  with the metric d(tildef_1 tildef_2) = max tildef_1(x) - tildef_2(x)  x in I . Let M mathcalF mapsto mathcalF be a mapping defined by (Mtildef)(x) = F_i(L_i^-1(x) tildef(L_i^-1(x))  x in I for i = 0 ldots N. Then, M has unique fixed point f such that f = lim_n mapsto infty M^n(tildef) for any tildef in mathcalF and f satisfies the condition given above.","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"The function f whose graph is the attractor of the IFS mathcalI and which is the fixed point of the mapping M given in Theorem above is called a fractal interpolation function (FIF).","category":"page"},{"location":"manual/one_dimensional_interpolation/#D-Fractal-Interpolation","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"","category":"section"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Consider the affine IFS mathcalI =  I times mathbbR w_i  i = 1 ldots N  with,","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginaligned\nL_i(x) = a_i x + e_i \nF_i(x y) = c_i x + d_i y + f_i\nendaligned\nquad i = 0 ldots N - 1","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"where d_i  i = 1 ldots N are free parameters, also called as vertical scaling factors, such that d_i  1. ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Given the vertical scaling factors d_i  i = 1 ldots N, the coefficients a_i and e_i of the affine transformation L_i, and c_i and f_i of the affine transformation F_i are determined to satisfy the constraints, respectively.","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"From the boundary conditions, we have","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix \nx_0   1  \nx_N   1\nendbmatrix\n\nbeginbmatrix\na_i \ne_i\nendbmatrix = \n\nbeginbmatrix\nx_i \nx_i + 1\nendbmatrix\n\nquad i = 0 ldots N - 1","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"which implies ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix\na_i \ne_i\nendbmatrix = \n\ndfrac1x_0 -  x_N\n\nbeginbmatrix \n1   -1  \n-x_N   x_0  \nendbmatrix\nbeginbmatrix\nx_i  \nx_i + 1\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Similarly, we have, ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix \nx_0   1  \nx_N   1  \nendbmatrix\n\nbeginbmatrix\nc_i \nf_i\nendbmatrix = \n\nbeginbmatrix\ny_i - d_i y_0  \ny_i + 1 - d_i y_N\nendbmatrix\nquad i = 0 ldots N - 1","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"which implies ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix\nc_i \nf_i\nendbmatrix = \n\ndfrac1x_0 -  x_N\n\nbeginbmatrix \n1   -1  \n-x_N   x_0  \nendbmatrix\nbeginbmatrix\ny_i - d_i y_0  \ny_i + 1 - d_i y_N\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"[1]: mathcalC(bmX) denotes the set of continuous functions defined over the set bmX.","category":"page"},{"location":"manual/one_dimensional_interpolation/#D-Hidden-Fractal-Interpolation","page":"1D Fractal Interpolation","title":"1D Hidden Fractal Interpolation","text":"","category":"section"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Consider the following IFS, ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"w_i = left(\nbeginbmatrix\nx  \ny \nz\nendbmatrix\nright) = \n\nbeginbmatrix\na_i  0  0 \nc_i  d_i  h_i \nk_i  l_i  m_i \nendbmatrix\n\nbeginbmatrix\nx  \ny \nz\nendbmatrix\n\n+ \n\nbeginbmatrix\ne_i  \nf_i \ng_i\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"We assume that the following boundary conditions are satisfied. ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"w_i = left(\nbeginbmatrix\nx_0  \ny_0 \nz_0\nendbmatrix\nright) = \nbeginbmatrix\nx_i  \ny_i \nz_i\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"and ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"w_i = left(\nbeginbmatrix\nx_N  \ny_N \nz_N\nendbmatrix\nright) = \n\nbeginbmatrix\nx_i + 1  \ny_i + 1 \nz_i + 1\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Given the free parameters  z_i d_i h_i l_i m_i, which are called as hidden variables, the remaining parameter a_i c_i k_i e_i f_i g_i can be calculated. ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Using the boundary conditions, we can write ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix \nx_0   1  \nx_N   1\nendbmatrix\n\nbeginbmatrix\na_i \ne_i\nendbmatrix = \n\nbeginbmatrix\nx_i \nx_i + 1\nendbmatrix\n\nquad i = 0 ldots N - 1","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"which implies ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix\na_i \ne_i\nendbmatrix = \n\ndfrac1x_0 -  x_N\n\nbeginbmatrix \n1   -1  \n-x_N   x_0  \nendbmatrix\nbeginbmatrix\nx_i  \nx_i + 1\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Similarly, we have ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix \nx_0   1  \nx_N   1\nendbmatrix\n\nbeginbmatrix\nc_i \nf_i\nendbmatrix = \n\nbeginbmatrix\ny_i - d_i y_0 - h_i z_0  \ny_i + 1 - d_i y_N - h_i z_N\nendbmatrix\n\nquad i = 0 ldots N - 1","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"which implies ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix\nc_i \nf_i\nendbmatrix = \n\ndfrac1x_0 -  x_N\n\nbeginbmatrix \n1   -1  \n-x_N   x_0  \nendbmatrix\nbeginbmatrix\ny_i - d_i y_0 - h_i z_0 \ny_i + 1 - d_i y_N - h_i z_N\nendbmatrix","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"Again, ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix \nx_0   1  \nx_N   1\nendbmatrix\n\nbeginbmatrix\nk_i \ng_i\nendbmatrix = \n\nbeginbmatrix\nz_i - d_i y_0 - h_i z_0  \nz_i + 1 - d_i y_N - h_i z_N\nendbmatrix\n\nquad i = 0 ldots N - 1","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"which implies ","category":"page"},{"location":"manual/one_dimensional_interpolation/","page":"1D Fractal Interpolation","title":"1D Fractal Interpolation","text":"beginbmatrix\nk_i \ng_i\nendbmatrix = \n\ndfrac1x_0 -  x_N\n\nbeginbmatrix \n1   -1  \n-x_N   x_0  \nendbmatrix\nbeginbmatrix\nz_i - d_i y_0 - h_i z_0 \nz_i + 1 - d_i y_N - h_i z_N\nendbmatrix","category":"page"},{"location":"#FractalTools.jl","page":"API","title":"FractalTools.jl","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"Modules = [FractalTools]","category":"page"},{"location":"#FractalTools.IFS","page":"API","title":"FractalTools.IFS","text":"struct IFS{T1, T2}\n\nIterated fucntion sytem (IFS) \n\nFields\n\nws::Any\nprobs::Any\n\n\n\n\n\n","category":"type"},{"location":"#FractalTools.Interpolant","page":"API","title":"FractalTools.Interpolant","text":"struct Interpolant{T1<:IFS, T2<:(AbstractArray{var\"#s12\",1} where var\"#s12\"<:Interval), T3} <: AbstractInterpolant\n\nOne dimensional fractal interpolant \n\nFields\n\nifs::IFS\nintervals::AbstractArray{var\"#s12\",1} where var\"#s12\"<:Interval\nitp::Any\n\n\n\n\n\n","category":"type"},{"location":"#FractalTools.Interval","page":"API","title":"FractalTools.Interval","text":"struct Interval{T<:Real}\n\nReal closed interval\n\nFields\n\nlb::Real\nub::Real\n\n\n\n\n\n","category":"type"},{"location":"#FractalTools.Transformation","page":"API","title":"FractalTools.Transformation","text":"struct Transformation{T1, T2}\n\nAffine transformation \n\nFields\n\nA::Any\nb::Any\n\n\n\n\n\n","category":"type"},{"location":"#Base.:∈-Tuple{Real,Interval}","page":"API","title":"Base.:∈","text":"∈(x, I)\n\n\nReturns true if x is in I.\n\nExample\n\njulia> I = Interval(1, 2)\nInterval{Int64}(1, 2)\n\njulia> 1.5 ∈ I \ntrue\n\n\n\n\n\n","category":"method"},{"location":"#FractalTools.fif","page":"API","title":"FractalTools.fif","text":"fif(x, y, d)\nfif(x, y, d, f0)\nfif(x, y, d, f0, niter)\n\n\nInterpolates the data pairs (xi, yi) for xi ∈ x and yi ∈ y. f0 is the initial function and niter is the number of iterations.\n\n\n\n\n\n","category":"function"},{"location":"#FractalTools.gethiddenifs-NTuple{7,AbstractArray{T,1} where T}","page":"API","title":"FractalTools.gethiddenifs","text":"gethiddenifs(x, y, z, d, h, l, m)\n\n\nReturns the IFS corresponding to interpolation data x, y. d is the scaling parameters. See the notes on docs\n\n\n\n\n\n","category":"method"},{"location":"#FractalTools.getifs-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,1} where T}","page":"API","title":"FractalTools.getifs","text":"getifs(x, y, d)\n\n\nReturns the IFS corresponding to interpolation data x, y. d is the scaling parameters.\n\n\n\n\n\n","category":"method"},{"location":"#FractalTools.getintervals-Tuple{AbstractArray{T,1} where T}","page":"API","title":"FractalTools.getintervals","text":"getintervals(x)\n\n\nReturns the just-touching intervals \n\n\n\n\n\n","category":"method"},{"location":"#FractalTools.hiddenfif-NTuple{7,AbstractArray{T,1} where T}","page":"API","title":"FractalTools.hiddenfif","text":"hiddenfif(x, y, z, d, h, l, m; f0, niter)\n\n\nInterpolates the data pairs (xi, yi) for xi ∈ x and yi ∈ y. f0 is the initial function and niter is the number of iterations.\n\n\n\n\n\n","category":"method"},{"location":"#FractalTools.wrap-Tuple{Any}","page":"API","title":"FractalTools.wrap","text":"wrap()\n\n\nFunctional that takes initiali function func and returns a wrapped function.\n\n\n\n\n\n","category":"method"},{"location":"#FractalTools.wraphidden-Tuple{Any}","page":"API","title":"FractalTools.wraphidden","text":"wraphidden()\n\n\nFunctional that takes initiali function func and returns a wrapped function.\n\n\n\n\n\n","category":"method"}]
}
